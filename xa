local OrionLib = {
    Windows = {},
    Themes = {
        Default = {
            Main = Color3.fromRGB(15, 15, 15),
            Second = Color3.fromRGB(20, 20, 25),
            Stroke = Color3.fromRGB(60, 60, 60),
            Text = Color3.fromRGB(240, 240, 240),
            TextDark = Color3.fromRGB(140, 140, 140)
        }
    },
    Flags = {}
}

-- Безопасное создание экземпляров
local function SafeInstance(className, properties)
    local instance = Instance.new(className)
    for prop, value in pairs(properties or {}) do
        instance[prop] = value
    end
    return instance
end

-- Основная функция создания окна
function OrionLib:MakeWindow(config)
    config = config or {}
    local window = {
        Tabs = {},
        Name = config.Name or "HelixKey System",
        Size = config.Size or UDim2.new(0, 600, 0, 400),
        Position = config.Position or UDim2.new(0.5, -300, 0.5, -200)
    }
    
    -- Создание GUI
    local screenGui = SafeInstance("ScreenGui", {
        Name = "HelixKey_"..tostring(math.random(1, 10000)),
        ResetOnSpawn = false
    })
    
    local mainFrame = SafeInstance("Frame", {
        Size = window.Size,
        Position = window.Position,
        BackgroundColor3 = self.Themes.Default.Main,
        BorderSizePixel = 0
    })
    mainFrame.Parent = screenGui
    
    local uiCorner = SafeInstance("UICorner", {
        CornerRadius = UDim.new(0, 8)
    })
    uiCorner.Parent = mainFrame
    
    -- Заголовок окна
    local titleBar = SafeInstance("Frame", {
        Size = UDim2.new(1, 0, 0, 30),
        BackgroundColor3 = self.Themes.Default.Second,
        BorderSizePixel = 0
    })
    titleBar.Parent = mainFrame
    
    local titleText = SafeInstance("TextLabel", {
        Text = window.Name,
        TextColor3 = self.Themes.Default.Text,
        Font = Enum.Font.GothamBold,
        TextSize = 14,
        BackgroundTransparency = 1,
        Position = UDim2.new(0, 10, 0, 0),
        Size = UDim2.new(1, -100, 1, 0)
    })
    titleText.Parent = titleBar
    
    -- Кнопка закрытия (без сворачивания)
    local closeButton = SafeInstance("TextButton", {
        Text = "X",
        TextColor3 = Color3.new(1, 1, 1),
        Size = UDim2.new(0, 30, 0, 30),
        Position = UDim2.new(1, -30, 0, 0),
        BackgroundColor3 = Color3.fromRGB(255, 50, 50),
        BorderSizePixel = 0
    })
    closeButton.Parent = titleBar
    
    -- Контейнер вкладок
    local tabContainer = SafeInstance("Frame", {
        Size = UDim2.new(1, 0, 1, -30),
        Position = UDim2.new(0, 0, 0, 30),
        BackgroundTransparency = 1
    })
    tabContainer.Parent = mainFrame
    
    -- Функционал вкладок
    function window:MakeTab(tabConfig)
        tabConfig = tabConfig or {}
        local tab = {
            Name = tabConfig.Name or "Tab",
            Container = SafeInstance("ScrollingFrame", {
                Size = UDim2.new(1, 0, 1, 0),
                BackgroundTransparency = 1,
                ScrollBarThickness = 5,
                Visible = false
            })
        }
        tab.Container.Parent = tabContainer
        
        local uiListLayout = SafeInstance("UIListLayout", {
            Padding = UDim.new(0, 5)
        })
        uiListLayout.Parent = tab.Container
        
        -- Активация вкладки
        function tab:Show()
            for _, otherTab in pairs(window.Tabs) do
                otherTab.Container.Visible = false
            end
            tab.Container.Visible = true
        end
        
        -- Простая кнопка
        function tab:AddButton(btnConfig)
            local button = SafeInstance("TextButton", {
                Text = btnConfig.Name or "Button",
                Size = UDim2.new(1, -20, 0, 30),
                Position = UDim2.new(0, 10, 0, 0),
                BackgroundColor3 = OrionLib.Themes.Default.Second,
                TextColor3 = OrionLib.Themes.Default.Text,
                Font = Enum.Font.Gotham,
                TextSize = 12
            })
            button.Parent = tab.Container
            
            button.MouseButton1Click:Connect(function()
                if btnConfig.Callback then
                    pcall(btnConfig.Callback)
                end
            end)
            
            return button
        end
        
        -- Простой тоггл
        function tab:AddToggle(toggleConfig)
            local toggleFrame = SafeInstance("Frame", {
                Size = UDim2.new(1, -20, 0, 30),
                BackgroundTransparency = 1
            })
            toggleFrame.Parent = tab.Container
            
            local toggleLabel = SafeInstance("TextLabel", {
                Text = toggleConfig.Name or "Toggle",
                TextColor3 = OrionLib.Themes.Default.Text,
                Font = Enum.Font.Gotham,
                TextSize = 12,
                BackgroundTransparency = 1,
                Size = UDim2.new(0.7, 0, 1, 0)
            })
            toggleLabel.Parent = toggleFrame
            
            local toggleButton = SafeInstance("TextButton", {
                Size = UDim2.new(0.2, 0, 0.7, 0),
                Position = UDim2.new(0.8, 0, 0.15, 0),
                BackgroundColor3 = Color3.fromRGB(80, 80, 80),
                Text = ""
            })
            toggleButton.Parent = toggleFrame
            
            local toggleState = toggleConfig.Default or false
            
            local function UpdateToggle()
                if toggleState then
                    toggleButton.BackgroundColor3 = Color3.fromRGB(0, 200, 0)
                else
                    toggleButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
                end
                
                if toggleConfig.Callback then
                    pcall(toggleConfig.Callback, toggleState)
                end
            end
            
            toggleButton.MouseButton1Click:Connect(function()
                toggleState = not toggleState
                UpdateToggle()
            end)
            
            UpdateToggle()
            
            return {
                Set = function(value)
                    toggleState = value
                    UpdateToggle()
                end
            }
        end
        
        -- Активируем первую вкладку
        if #window.Tabs == 0 then
            tab:Show()
        end
        
        table.insert(window.Tabs, tab)
        return tab
    end
    
    -- Обработчики событий
    closeButton.MouseButton1Click:Connect(function()
        screenGui:Destroy()
    end)
    
    -- Перетаскивание окна
    local dragging = false
    local dragStart, startPos
    
    titleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = mainFrame.Position
        end
    end)
    
    titleBar.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            mainFrame.Position = UDim2.new(
                startPos.X.Scale, 
                startPos.X.Offset + delta.X, 
                startPos.Y.Scale, 
                startPos.Y.Offset + delta.Y
            )
        end
    end)
    
    -- Финализация
    screenGui.Parent = game:GetService("CoreGui") or game.Players.LocalPlayer:WaitForChild("PlayerGui")
    table.insert(self.Windows, window)
    return window
end

-- Функция для уведомлений
function OrionLib:Notify(title, message, duration)
    duration = duration or 5
    
    local notification = SafeInstance("ScreenGui", {
        Name = "Notification_"..tostring(math.random(1, 10000))
    })
    
    local frame = SafeInstance("Frame", {
        Size = UDim2.new(0, 300, 0, 80),
        Position = UDim2.new(1, -320, 1, -100),
        BackgroundColor3 = self.Themes.Default.Second,
        BorderSizePixel = 0
    })
    frame.Parent = notification
    
    local titleLabel = SafeInstance("TextLabel", {
        Text = title,
        TextColor3 = self.Themes.Default.Text,
        Font = Enum.Font.GothamBold,
        TextSize = 14,
        Size = UDim2.new(1, -20, 0, 30),
        Position = UDim2.new(0, 10, 0, 5),
        BackgroundTransparency = 1
    })
    titleLabel.Parent = frame
    
    local messageLabel = SafeInstance("TextLabel", {
        Text = message,
        TextColor3 = self.Themes.Default.TextDark,
        Font = Enum.Font.Gotham,
        TextSize = 12,
        Size = UDim2.new(1, -20, 0, 40),
        Position = UDim2.new(0, 10, 0, 35),
        TextWrapped = true,
        BackgroundTransparency = 1
    })
    messageLabel.Parent = frame
    
    notification.Parent = game:GetService("CoreGui") or game.Players.LocalPlayer:WaitForChild("PlayerGui")
    
    delay(duration, function()
        notification:Destroy()
    end)
end

return OrionLib
